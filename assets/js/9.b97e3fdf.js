(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{281:function(t,a,e){"use strict";e.r(a);var s=e(10),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"filter-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter-reference"}},[t._v("#")]),t._v(" Filter Reference")]),t._v(" "),e("h2",{attrs:{id:"string-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-filters"}},[t._v("#")]),t._v(" String Filters")]),t._v(" "),e("p",[t._v("String filters are used inside templates to transform text in different formats.")]),t._v(" "),e("p",[t._v("A typical usage would look like this")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("identifier")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])]),e("p",[t._v("The list of the common string filters are listed here")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("identifier")]),t._v(": creates a snake-case string\n"),e("ul",[e("li",[e("code",[t._v("org.demo")]),t._v(" => "),e("code",[t._v("org_demo")])])])]),t._v(" "),e("li",[e("strong",[t._v("constant")]),t._v(": create a constant case\n"),e("ul",[e("li",[e("code",[t._v("UpDirection")]),t._v(" => "),e("code",[t._v("UP_DIRECTION")])])])]),t._v(" "),e("li",[e("strong",[t._v("path")]),t._v(": transforms into a lower case string with slashes between words,\n"),e("ul",[e("li",[e("code",[t._v("org.demo")]),t._v(" => "),e("code",[t._v("org/demo")])])])]),t._v(" "),e("li",[e("strong",[t._v("upper")]),t._v(": transforms the string to upper case,\n"),e("ul",[e("li",[e("code",[t._v("hello world")]),t._v(" => "),e("code",[t._v("HELLO WORLD")])])])]),t._v(" "),e("li",[e("strong",[t._v("lower")]),t._v(": transforms the string to lower case\n"),e("ul",[e("li",[e("code",[t._v("Hello World")]),t._v(" => "),e("code",[t._v("hello world")])])])]),t._v(" "),e("li",[e("strong",[t._v("capital")]),t._v(": transform into a space separated string with each word capitalized\n"),e("ul",[e("li",[e("code",[t._v("hello world")]),t._v(" => "),e("code",[t._v("Hello World")])])])]),t._v(" "),e("li",[e("strong",[t._v("param")]),t._v(": transform into a lower cased string with dashes between words\n"),e("ul",[e("li",[e("code",[t._v("Hello world")]),t._v(" => "),e("code",[t._v("hello-world")])])])]),t._v(" "),e("li",[e("strong",[t._v("lowerFirst")]),t._v(": transforms the string with only the first character in lower case\n"),e("ul",[e("li",[e("code",[t._v("Hello world")]),t._v(" => "),e("code",[t._v("hello world")])])])]),t._v(" "),e("li",[e("strong",[t._v("upperFirst")]),t._v(": transforms the string with the first character in upper cased\n"),e("ul",[e("li",[e("code",[t._v("localVar")]),t._v(" => "),e("code",[t._v("LocalVar")])])])]),t._v(" "),e("li",[e("strong",[t._v("firstLower")]),t._v(": transforms the string with only the first character in lower case\n"),e("ul",[e("li",[e("code",[t._v("LocalVar")]),t._v(" => "),e("code",[t._v("localVar")])])])]),t._v(" "),e("li",[e("strong",[t._v("last")]),t._v(": extracts the last word from a dot based string\n"),e("ul",[e("li",[e("code",[t._v("hello.world")]),t._v(" => "),e("code",[t._v("world")])])])]),t._v(" "),e("li",[e("strong",[t._v("first")]),t._v(": extracts the first word from a dot based string\n"),e("ul",[e("li",[e("code",[t._v("hello.world")]),t._v(" => "),e("code",[t._v("hello")])])])]),t._v(" "),e("li",[e("strong",[t._v("version")]),t._v(": extracts major, minor, build version from a version string\n"),e("ul",[e("li",[e("code",[t._v("1.2.3")]),t._v(" => "),e("code",[t._v("{ major: 1, minor: 2, build: 3 }")])])])])]),t._v(" "),e("h2",{attrs:{id:"common-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-filters"}},[t._v("#")]),t._v(" Common Filters")]),t._v(" "),e("p",[t._v("All programming languages share a common set of filters which then are adapted to the specifics of the language.\nThese are "),e("code",[t._v("return")]),t._v(", "),e("code",[t._v("param")]),t._v(", "),e("code",[t._v("params")]),t._v(" and the "),e("code",[t._v("default")]),t._v(" filter.")]),t._v(" "),e("p",[t._v("For example for the C++ programming language you would use the "),e("code",[t._v("return")]),t._v(" and "),e("code",[t._v("params")]),t._v(" filter named "),e("code",[t._v("cpp14Return")]),t._v(" and "),e("code",[t._v("cpp14Params")]),t._v(" during operation declaration.")]),t._v(" "),e("p",[t._v("A typical usage could look like this")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" op "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" interface"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operations "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" op "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" interface "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("::"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" op "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("("),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" op "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Params")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v(");\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])]),e("p",[t._v("These are the common filters for all languages")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[e("lang",[t._v("Return")])],1),t._v(": takes and typed element and returns the type declaration of the type")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[e("lang",[t._v("Param")])],1),t._v(": takes a typed element and returns the function parameter declaration")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Param")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[e("lang",[t._v("Params")])],1),t._v(": takes an operation and return the lists of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Params")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[e("lang",[t._v("Default")])],1),t._v(": takes a typed element and returns default value")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"c-14-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-14-filters"}},[t._v("#")]),t._v(" C++14 Filters")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("cpp14Return")]),t._v(": takes a typed element and returns the type information. Typically used as return value in function calls.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("cpp14Param")]),t._v(": takes a typed element and creates an individual function parameter.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" operation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Param")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("cpp14Params")]),t._v(": takes an operation and creates an list of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Params")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("cpp14Default")]),t._v(": takes a a typed element and returns the default value of the type.")]),t._v(" "),e("p",[t._v("For an integer type this would be the value 0. For an enumeration this would be the first value.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("cpp14Default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"python-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-filters"}},[t._v("#")]),t._v(" Python Filters")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("pyReturn")]),t._v(": takes a typed element and returns the type information. Typically used as return value in function calls.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("pyReturn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("pyParam")]),t._v(": takes a typed element and creates an individual function parameter.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" operation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("pyParam")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("pyParams")]),t._v(": takes an operation and creates an list of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("pyParams")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("pyDefault")]),t._v(": takes a a typed element and returns the default value of the type.")]),t._v(" "),e("p",[t._v("For an integer type this would be the value 0. For an enumeration this would be the first value.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("pyDefault")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"go-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-filters"}},[t._v("#")]),t._v(" Go Filters")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("goReturn")]),t._v(": takes a typed element and returns the type information. Typically used as return value in function calls.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("goReturn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("goParam")]),t._v(": takes a typed element and creates an individual function parameter.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" operation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("goParam")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("goParams")]),t._v(": takes an operation and creates an list of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("goParams")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("goDefault")]),t._v(": takes a a typed element and returns the default value of the type.")]),t._v(" "),e("p",[t._v("For an integer type this would be the value 0. For an enumeration this would be the first value.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("goDefault")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"typescript-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-filters"}},[t._v("#")]),t._v(" TypeScript Filters")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("tsReturn")]),t._v(": takes a typed element and returns the type information. Typically used as return value in function calls.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("tsReturn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("tsParam")]),t._v(": takes a typed element and creates an individual function parameter.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" operation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("tsParam")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("tsParams")]),t._v(": takes an operation and creates an list of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("tsParams")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("tsDefault")]),t._v(": takes a a typed element and returns the default value of the type.")]),t._v(" "),e("p",[t._v("For an integer type this would be the value 0. For an enumeration this would be the first value.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("tsDefault")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"qt-c-filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qt-c-filters"}},[t._v("#")]),t._v(" Qt C++ Filters")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("qtReturn")]),t._v(": takes a typed element and returns the type information. Typically used as return value in function calls.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("qtReturn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("qtParam")]),t._v(": takes a typed element and creates an individual function parameter.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" operation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" param "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("qtParam")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("qtParams")]),t._v(": takes an operation and creates an list of function parameters")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" operation "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("qtParams")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("qtDefault")]),t._v(": takes a a typed element and returns the default value of the type.")]),t._v(" "),e("p",[t._v("For an integer type this would be the value 0. For an enumeration this would be the first value.")]),t._v(" "),e("div",{staticClass:"language-liquid extra-class"},[e("pre",{pre:!0,attrs:{class:"language-liquid"}},[e("code",[e("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("qtDefault")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);