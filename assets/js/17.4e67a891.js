(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{295:function(t,e,a){"use strict";a.r(e);var s=a(10),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rules-document"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rules-document"}},[t._v("#")]),t._v(" Rules Document")]),t._v(" "),e("p",[t._v("The rules document defines the context for each document to be transformed.")]),t._v(" "),e("h2",{attrs:{id:"features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),e("p",[t._v("Features are an isolated part of the code generator. When running the code generator features can be enabled and disable.")]),t._v(" "),e("p",[t._v("A feature is declared by name inside the features root tag.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature1\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature2\n")])])]),e("p",[t._v("A feature can contain a prefix target path as also a scope for documents.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("module.name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/\n")])])]),e("p",[t._v("Typical features are "),e("code",[t._v("api")]),t._v(", "),e("code",[t._v("scaffold")]),t._v(" but also protocols like "),e("code",[t._v("http")]),t._v(", "),e("code",[t._v("wamp")]),t._v(".")]),t._v(" "),e("p",[t._v("A feature can have these properties:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("needs")]),t._v(": defines feature flag which other features need to be enabled")]),t._v(" "),e("li",[e("code",[t._v("prefix")]),t._v(": defines a prefix output path")]),t._v(" "),e("li",[e("code",[t._v("scope")]),t._v(": defines a scope for documents with a match expression (e.g. "),e("code",[t._v("system")]),t._v(", "),e("code",[t._v("module")]),t._v(", "),e("code",[t._v("interface")]),t._v(", "),e("code",[t._v("struct")]),t._v(", "),e("code",[t._v("enum")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"feature-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature-dependencies"}},[t._v("#")]),t._v(" Feature dependencies")]),t._v(" "),e("p",[t._v("Needs allows to define a dependency between features. For example the "),e("code",[t._v("scaffold")]),t._v(" feature needs the "),e("code",[t._v("api")]),t._v(" feature to be enabled.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" api\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" scaffold\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" api\n")])])]),e("h2",{attrs:{id:"scopes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" Scopes")]),t._v(" "),e("p",[t._v("A scope defined the context for the template for language for the defined documents. The context defines the available objects available inside the template language. For example a module scope will always have defined "),e("code",[t._v("features")]),t._v(", "),e("code",[t._v("system")]),t._v(" and "),e("code",[t._v("module")]),t._v(" in the template document.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scopes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("documents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system.go"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system.go "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" module\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("documents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" module.go"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" module.go "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" interface\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("documents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" interface.go"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" interface.go "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" struct\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("documents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" struct.go"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" struct.go "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" enum\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("documents")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" enum.go"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" enum.go "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("A scope with the match "),e("code",[t._v("interface")]),t._v(" iterates over all interfaces in all modules and has defined a context with "),e("code",[t._v("features")]),t._v(", "),e("code",[t._v("system")]),t._v(" and "),e("code",[t._v("module")]),t._v(" and the current "),e("code",[t._v("interface")]),t._v(" in it.")]),t._v(" "),e("h3",{attrs:{id:"match-logic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#match-logic"}},[t._v("#")]),t._v(" Match logic")]),t._v(" "),e("ul",[e("li",[t._v("match: "),e("code",[t._v("system")]),t._v(" "),e("ul",[e("li",[t._v("called once for the system")]),t._v(" "),e("li",[t._v("context => "),e("code",[t._v("{ features, system }")])])])]),t._v(" "),e("li",[t._v("match: "),e("code",[t._v("module")]),t._v(" "),e("ul",[e("li",[t._v("called for each module")]),t._v(" "),e("li",[t._v("context => "),e("code",[t._v("{ features, system, module }")])])])]),t._v(" "),e("li",[t._v("match: "),e("code",[t._v("interface")]),t._v(" "),e("ul",[e("li",[t._v("called once per interface in all modules")]),t._v(" "),e("li",[t._v("context => "),e("code",[t._v("{ features, system, module, interface }")])])])]),t._v(" "),e("li",[t._v("match: "),e("code",[t._v("struct")]),t._v(" "),e("ul",[e("li",[t._v("called once per struct in all modules")]),t._v(" "),e("li",[t._v("context => "),e("code",[t._v("{ features, system, module, struct }")])])])]),t._v(" "),e("li",[t._v("match: "),e("code",[t._v("enum")]),t._v(" "),e("ul",[e("li",[t._v("called once per enum in all modules")]),t._v(" "),e("li",[t._v("context => "),e("code",[t._v("{ features, system, module, enum }")])])])])]),t._v(" "),e("h2",{attrs:{id:"documents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#documents"}},[t._v("#")]),t._v(" Documents")]),t._v(" "),e("p",[t._v("A document defines the source template and the target where to write the document.")]),t._v(" "),e("p",[t._v("The document define the source, target and some additional flags for writing.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("source")]),t._v(": source path inside the templates directory.")]),t._v(" "),e("li",[e("code",[t._v("target")]),t._v(": target template string inside the output directory.")]),t._v(" "),e("li",[e("code",[t._v("force")]),t._v(": if true, the document will be forced to be overwritten when re-generated.")]),t._v(" "),e("li",[e("code",[t._v("raw")]),t._v(": if true, document will be just copied and not treated as template. Raw if off by default.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);